<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
">
    
    
    <!-- Session Creation -->
    <security:http auto-config="true" use-expressions="true" create-session="ifRequired">
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        
        <!-- listener class configured in web.xml -->
        <!-- session timeout as in web.xml -->
        <!-- Prevent using URL Parameters for Session Tracking as in web.xml -->
        
        <!-- Session Fixation Protection -->
        <!-- when the user tries to authenticate again â€“ on authentication a new HTTP Session is created, the old 
        one is invalidated and the attributes from the old session are copied over. -->
        <security:session-management session-fixation-protection="migrateSession">
            <!-- Concurrent Session Control -->
            <security:concurrency-control max-sessions="2" expired-url="/login" error-if-maximum-exceeded="true"></security:concurrency-control>
        </security:session-management>
        
        <!-- Login -->
        <security:form-login username-parameter="username" password-parameter="password"
                             default-target-url="/admin/dashboard" authentication-failure-url="/login/failure"
                             login-page="/login" login-processing-url="/login" />
        
        <!-- Logout -->
        <!--        <security:logout invalidate-session="true" delete-cookies="AppCookies"
        logout-url="/logout" logout-success-url="/index" />-->
    </security:http>
    
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name = "user" password="mypassword" authorities="ROLE_ADMIN" />
            </security:user-service>
        </security:authentication-provider>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query="select username, password, active from userlogin_tbl where username=?"
                                        authorities-by-username-query="select ul.username, ur.authority from userlogin_tbl ul, userrole_tbl ur where ul.roleId = ur.roleId and ul.username = ?;"
            />
        </security:authentication-provider>
    </security:authentication-manager>

</beans>
